@model TaoTaoShopping.Models.shopping

@{
    ViewBag.Title = "Create";
}

<h2 align="center">编辑商品</h2>

<form action="" id="myForm" method="post">
    @Html.AntiForgeryToken()
    @* 为什么需要加一个隐藏的Id？ =》为什么需要隐藏的id字段？因为方便锁定数据修改！！ *@
    <input type="hidden" name="id" value="@Model.id" />

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.title, "商品名称", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cid, "商品分类", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, "商品原价", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sale_price, "商品促销价", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sale_price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sale_price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.number, "商品数量", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.detail, "商品详情", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- 加载编辑器的容器 -->
                <script id="content" name="detail" type="text/plain">@(new HtmlString(Model.detail))</script>
                <!-- 配置文件 -->
                <script type="text/javascript" src="/Content/utf8-net/ueditor.config.js"></script>
                <!-- 编辑器源码文件 -->
                <script type="text/javascript" src="/Content/utf8-net/ueditor.all.js"></script>
                <!-- 语言包文件 -->
                <script type="text/javascript" src="/Content/utf8-net/lang/zh-cn/zh-cn.js"></script>
                <!-- 实例化编辑器 -->
                <script type="text/javascript">
                    var ue = UE.getEditor('content', {
                        //默认的编辑区域高度
                        initialFrameHeight: 400
                    });
                </script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.img, "商品封面", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* 封面图上传 *@
                <input class="width-main input" type="file" datatype="*" id="pic" name="pic" value="" accept="image/*" onchange="upload(event)">
                <input type="hidden" name="img" id="img" value="@Model.img" />
                <div id="showImg">
                    <img src="@Model.img" width="100" height="100" alt="Alternate Text" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shop_number, "商品编号", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shop_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shop_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存编辑" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div align="center" class="row">
    @Html.ActionLink("返回商品列表", "Index")
</div>
@* 需要引入jquery插件实现异步上传 *@
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
        //实现异步上传
        function upload(event) {
            var imgPath = $("#pic").val();
            console.log(imgPath);
            //判断上传文件的后缀名
            var strExtension = imgPath.substr(imgPath.lastIndexOf('.') + 1);

            if (strExtension != 'jpg' && strExtension != 'gif' && strExtension != 'png' && strExtension != 'bmp') {
                alert("请选择图片文件");
                return;
            }
            //实现文件上传操作
            if (event.target.files[0].type.search('image') !== -1) {
                //实现文件图片的上传
                var formData = new FormData($("#myForm")[0]);//用于创建一个文件流对象
                //formData.append('pic', $("#img")[0]); //添加文件流 （流名称，流）
                //console.log(formData);
                $.ajax({
                    url: "/Upload/file",
                    type: "post",
                    cache: false,
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: function (res) {
                        console.log(res);
                        if (res.trim() == "209") {
                            alert("请选择图片！");
                            return;
                        }
                        if (res.trim() == "300") {
                            alert("上传的图片不能为空图片！");
                            return;
                        }
                        if (res.trim() == "400") {
                            alert("上传的图片失败！");
                            return;
                        }
                        //alert("上传成功！");
                        $("#showImg").html("<img src='" + res + "' width='50' height='50' /><p style='color:red;'>上传成功！</p>");
                        //设置上传的图片地址
                        var res = res.trim(); //去除图片的前后空白字符
                        $("#img").val(res);
                    },
                    error: function (res) {
                        alert("上传异常！");
                    }
                });
            } else {
                alert('只支持上传图片');
            }
        }
</script>

